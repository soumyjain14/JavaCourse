<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="classes_and_objects.Polynomial"/>
    <fullyQualifiedTypeName name="classes_and_objects.Polynomial1"/>
    <fullyQualifiedTypeName name="classes_and_objects.ZeroDenominatorException"/>
    <fullyQualifiedTypeName name="recursion.Factorial"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="javax.management.ObjectInstance"/>
    <fullyQualifiedTypeName name="recursion.MergeSort"/>
    <fullyQualifiedTypeName name="vehicle.Vehicle"/>
    <fullyQualifiedTypeName name="interfaces.VehicleInterface"/>
    <fullyQualifiedTypeName name="generics.TwoNumbers"/>
    <fullyQualifiedTypeName name="javax.xml.soap.Node"/>
    <fullyQualifiedTypeName name="linkedList.EvenAfterOddLL"/>
    <fullyQualifiedTypeName name="linkedList.Node"/>
    <fullyQualifiedTypeName name="linkedList.DoubleNode"/>
    <fullyQualifiedTypeName name="StackUsingArray"/>
    <fullyQualifiedTypeName name="StackFullException"/>
    <fullyQualifiedTypeName name="StackEmptyError"/>
    <fullyQualifiedTypeName name="StackUsingLL"/>
    <fullyQualifiedTypeName name="java.lang.Character"/>
    <fullyQualifiedTypeName name="queue.QueueEmptyException"/>
    <fullyQualifiedTypeName name="queue.QueueFullException"/>
    <fullyQualifiedTypeName name="queue.QueueUsingLL"/>
    <fullyQualifiedTypeName name="java.util.EmptyStackException"/>
    <fullyQualifiedTypeName name="java.lang.Math"/>
    <fullyQualifiedTypeName name="linkedList.IsPalindrome"/>
    <fullyQualifiedTypeName name="queue.DequeUsingLL"/>
    <fullyQualifiedTypeName name="queue.QueueUsingArray"/>
    <fullyQualifiedTypeName name="leetcode.IsAlienSorted"/>
    <fullyQualifiedTypeName name="java.awt.List"/>
    <fullyQualifiedTypeName name="leetcode.TreeNode"/>
    <fullyQualifiedTypeName name="java.util.Scanner"/>
    <fullyQualifiedTypeName name="java.util.Stack"/>
    <fullyQualifiedTypeName name="binaryTree.MirrorABinaryTree"/>
    <fullyQualifiedTypeName name="binaryTree.MaxNodePair"/>
    <fullyQualifiedTypeName name="binaryTree.Pair"/>
    <fullyQualifiedTypeName name="bst.Pair"/>
    <fullyQualifiedTypeName name="bst.Node"/>
    <fullyQualifiedTypeName name="java.lang.reflect.Array"/>
    <fullyQualifiedTypeName name="binaryTree.BinarySearchTreeUse"/>
    <fullyQualifiedTypeName name="bst.GetRootToNodePath"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="tree.TreeNode"/>
    <fullyQualifiedTypeName name="bst.BinarySearchTree"/>
    <fullyQualifiedTypeName name="bst.BinaryTreeNode"/>
    <fullyQualifiedTypeName name="java.util.Set"/>
    <fullyQualifiedTypeName name="javax.sound.midi.SysexMessage"/>
    <fullyQualifiedTypeName name="binaryTree.Node"/>
    <fullyQualifiedTypeName name="java.util.Queue"/>
    <fullyQualifiedTypeName name="binaryTree.BinaryTreeNode"/>
    <fullyQualifiedTypeName name="java.util.function.ToDoubleBiFunction"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.LinkedList"/>
    <fullyQualifiedTypeName name="maps.TwoSumLC"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="maps.Map"/>
    <fullyQualifiedTypeName name="maps.MapNode"/>
    <fullyQualifiedTypeName name="pq.Priority_Queue"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="pq.Priority_Queue_Exception"/>
</qualifiedTypeNameHistroy>
